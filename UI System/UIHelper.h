// UIHelper.h - р╣Др╕Яр╕ер╣М Header р╕кр╕│р╕лр╕гр╕▒р╕Ър╕гр╕░р╕Ър╕Ър╕Бр╕▓р╕гр╣Бр╕кр╕Фр╕Зр╕Ьр╕ер╣Бр╕ер╕░р╕Бр╕▓р╕гр╕Ир╕▒р╕Фр╕гр╕╣р╕Ыр╣Бр╕Ър╕Ъ
// р╣Др╕Яр╕ер╣Мр╕Щр╕╡р╣Йр╕гр╕зр╕Ър╕гр╕зр╕бр╕Др╣Ир╕▓р╕Др╕Зр╕Чр╕╡р╣Ир╣Бр╕ер╕░р╕Яр╕▒р╕Зр╕Бр╣Мр╕Кр╕▒р╕Щр╕кр╕│р╕лр╕гр╕▒р╕Ър╕Бр╕▓р╕гр╕Ир╕▒р╕Фр╕Бр╕▓р╕гр╕Бр╕▓р╕гр╣Бр╕кр╕Фр╕Зр╕Ьр╕ер╣Гр╕Щр╣Ар╕Бр╕б
#ifndef UIHELPER_H
#define UIHELPER_H

#include <string>
#include <iostream>
#include <thread>
#include <chrono>

// р╕гр╕лр╕▒р╕кр╕кр╕╡р╣Бр╕Ър╕Ъ ANSI р╕кр╕│р╕лр╕гр╕▒р╕Ър╕Бр╕▓р╕гр╣Бр╕кр╕Фр╕Зр╕Ьр╕ер╣Гр╕Щр╣Ар╕Чр╕нр╕гр╣Мр╕бр╕┤р╕Щр╕▒р╕е
namespace Colors
{
  // р╕кр╕╡р╕Юр╕╖р╣Йр╕Щр╕Рр╕▓р╕Щ
  const std::string RESET = "\033[0m";    // р╕гр╕╡р╣Ар╕Лр╣Зр╕Хр╕Бр╕▓р╕гр╕Ир╕▒р╕Фр╕гр╕╣р╕Ыр╣Бр╕Ър╕Ър╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф
  const std::string BLACK = "\033[30m";   // р╕кр╕╡р╕Фр╕│
  const std::string RED = "\033[31m";     // р╕кр╕╡р╣Бр╕Фр╕З
  const std::string GREEN = "\033[32m";   // р╕кр╕╡р╣Ар╕Вр╕╡р╕вр╕з
  const std::string YELLOW = "\033[33m";  // р╕кр╕╡р╣Ар╕лр╕ер╕╖р╕нр╕З
  const std::string BLUE = "\033[34m";    // р╕кр╕╡р╕Щр╣Йр╕│р╣Ар╕Зр╕┤р╕Щ
  const std::string MAGENTA = "\033[35m"; // р╕кр╕╡р╕бр╣Ир╕зр╕З
  const std::string CYAN = "\033[36m";    // р╕кр╕╡р╕Яр╣Йр╕▓
  const std::string WHITE = "\033[37m";   // р╕кр╕╡р╕Вр╕▓р╕з

  // р╕кр╕╡р╕кр╕зр╣Ир╕▓р╕З (Bright colors)
  const std::string BRIGHT_BLACK = "\033[90m";   // р╕кр╕╡р╕Фр╕│р╕кр╕зр╣Ир╕▓р╕З
  const std::string BRIGHT_RED = "\033[91m";     // р╕кр╕╡р╣Бр╕Фр╕Зр╕кр╕зр╣Ир╕▓р╕З
  const std::string BRIGHT_GREEN = "\033[92m";   // р╕кр╕╡р╣Ар╕Вр╕╡р╕вр╕зр╕кр╕зр╣Ир╕▓р╕З
  const std::string BRIGHT_YELLOW = "\033[93m";  // р╕кр╕╡р╣Ар╕лр╕ер╕╖р╕нр╕Зр╕кр╕зр╣Ир╕▓р╕З
  const std::string BRIGHT_BLUE = "\033[94m";    // р╕кр╕╡р╕Щр╣Йр╕│р╣Ар╕Зр╕┤р╕Щр╕кр╕зр╣Ир╕▓р╕З
  const std::string BRIGHT_MAGENTA = "\033[95m"; // р╕кр╕╡р╕бр╣Ир╕зр╕Зр╕кр╕зр╣Ир╕▓р╕З
  const std::string BRIGHT_CYAN = "\033[96m";    // р╕кр╕╡р╕Яр╣Йр╕▓р╕кр╕зр╣Ир╕▓р╕З
  const std::string BRIGHT_WHITE = "\033[97m";   // р╕кр╕╡р╕Вр╕▓р╕зр╕кр╕зр╣Ир╕▓р╕З

  // р╕гр╕╣р╕Ыр╣Бр╕Ър╕Ър╕Вр╣Йр╕нр╕Др╕зр╕▓р╕б (Text styles)
  const std::string BOLD = "\033[1m";      // р╕Хр╕▒р╕зр╕лр╕Щр╕▓
  const std::string UNDERLINE = "\033[4m"; // р╕Вр╕╡р╕Фр╣Ар╕кр╣Йр╕Щр╣Гр╕Хр╣Й
  const std::string ITALIC = "\033[3m";    // р╕Хр╕▒р╕зр╣Ар╕нр╕╡р╕вр╕З

  // р╕кр╕╡р╕Юр╕╖р╣Йр╕Щр╕лр╕ер╕▒р╕З (Background colors)
  const std::string BG_BLACK = "\033[40m";   // р╕Юр╕╖р╣Йр╕Щр╕лр╕ер╕▒р╕Зр╕кр╕╡р╕Фр╕│
  const std::string BG_RED = "\033[41m";     // р╕Юр╕╖р╣Йр╕Щр╕лр╕ер╕▒р╕Зр╕кр╕╡р╣Бр╕Фр╕З
  const std::string BG_GREEN = "\033[42m";   // р╕Юр╕╖р╣Йр╕Щр╕лр╕ер╕▒р╕Зр╕кр╕╡р╣Ар╕Вр╕╡р╕вр╕з
  const std::string BG_YELLOW = "\033[43m";  // р╕Юр╕╖р╣Йр╕Щр╕лр╕ер╕▒р╕Зр╕кр╕╡р╣Ар╕лр╕ер╕╖р╕нр╕З
  const std::string BG_BLUE = "\033[44m";    // р╕Юр╕╖р╣Йр╕Щр╕лр╕ер╕▒р╕Зр╕кр╕╡р╕Щр╣Йр╕│р╣Ар╕Зр╕┤р╕Щ
  const std::string BG_MAGENTA = "\033[45m"; // р╕Юр╕╖р╣Йр╕Щр╕лр╕ер╕▒р╕Зр╕кр╕╡р╕бр╣Ир╕зр╕З
  const std::string BG_CYAN = "\033[46m";    // р╕Юр╕╖р╣Йр╕Щр╕лр╕ер╕▒р╕Зр╕кр╕╡р╕Яр╣Йр╕▓
  const std::string BG_WHITE = "\033[47m";   // р╕Юр╕╖р╣Йр╕Щр╕лр╕ер╕▒р╕Зр╕кр╕╡р╕Вр╕▓р╕з
}

// р╣Др╕нр╕Др╕нр╕Щ Unicode р╕кр╕│р╕лр╕гр╕▒р╕Ър╕Бр╕▓р╕гр╣Бр╕кр╕Фр╕Зр╕Ьр╕ер╣Гр╕Щр╣Ар╕Бр╕б
namespace Icons
{
  // р╣Др╕нр╕Др╕нр╕Щр╕Юр╕╖р╣Йр╕Щр╕Рр╕▓р╕Щр╕Вр╕нр╕Зр╣Ар╕Бр╕б
  const std::string CARD = "ЁЯГП";      // р╣Др╕нр╕Др╕нр╕Щр╕Бр╕▓р╕гр╣Мр╕Ф
  const std::string SWORD = "тЪФя╕П";      // р╣Др╕нр╕Др╕нр╕Щр╕Бр╕▓р╕гр╣Вр╕Ир╕бр╕Хр╕╡
  const std::string SHIELD = "ЁЯЫбя╕П";     // р╣Др╕нр╕Др╕нр╕Щр╕Бр╕▓р╕гр╕Ыр╣Йр╕нр╕Зр╕Бр╕▒р╕Щ
  const std::string HEART = "ЁЯТЪ";     // р╣Др╕нр╕Др╕нр╕Щр╕Юр╕ер╕▒р╕Зр╕Кр╕╡р╕зр╕┤р╕Х
  const std::string DIAMOND = "ЁЯТО";   // р╣Др╕нр╕Др╕нр╕Щр╣Ар╕Юр╕Кр╕г/р╕Вр╕нр╕Зр╕бр╕╡р╕Др╣Ир╕▓
  const std::string STAR = "тнР";      // р╣Др╕нр╕Др╕нр╕Щр╕Фр╕▓р╕з/р╕Юр╕┤р╣Ар╕ир╕й
  const std::string FIRE = "ЁЯФе";      // р╣Др╕нр╕Др╕нр╕Щр╣Др╕Я/р╕Юр╕ер╕▒р╕Зр╣Вр╕Ир╕бр╕Хр╕╡
  const std::string LIGHTNING = "тЪб"; // р╣Др╕нр╕Др╕нр╕Щр╕кр╕▓р╕вр╕Яр╣Йр╕▓
  const std::string CROWN = "ЁЯСС";     // р╣Др╕нр╕Др╕нр╕Щр╕бр╕Зр╕Бр╕╕р╕О
  const std::string TARGET = "ЁЯОп";    // р╣Др╕нр╕Др╕нр╕Щр╣Ар╕Ыр╣Йр╕▓р╕лр╕бр╕▓р╕в
  const std::string RUNNER = "ЁЯПГ";    // р╣Др╕нр╕Др╕нр╕Щр╕Бр╕▓р╕гр╕зр╕┤р╣Ир╕З
  const std::string SLEEP = "ЁЯТд";     // р╣Др╕нр╕Др╕нр╕Щр╕Бр╕▓р╕гр╕Юр╕▒р╕Б
  const std::string MAGIC = "тЬи";     // р╣Др╕нр╕Др╕нр╕Щр╣Ар╕зр╕Чр╕бр╕Щр╕Хр╕гр╣М
  const std::string HEAL = "ЁЯТЪ";      // р╣Др╕нр╕Др╕нр╕Щр╕Бр╕▓р╕гр╕гр╕▒р╕Бр╕йр╕▓
  const std::string DRAW = "ЁЯУЭ";      // р╣Др╕нр╕Др╕нр╕Щр╕Бр╕▓р╕гр╕Ир╕▒р╣Ир╕зр╕Бр╕▓р╕гр╣Мр╕Ф
  const std::string CRITICAL = "ЁЯТе";  // р╣Др╕нр╕Др╕нр╕Щр╕Бр╕▓р╕гр╣Вр╕Ир╕бр╕Хр╕╡р╕гр╕╕р╕Щр╣Бр╕гр╕З
  const std::string DAMAGE = "ЁЯй╕";    // р╣Др╕нр╕Др╕нр╕Щр╕Др╕зр╕▓р╕бр╣Ар╕кр╕╡р╕вр╕лр╕▓р╕в
  const std::string SKULL = "ЁЯТА";     // р╣Др╕нр╕Др╕нр╕Щр╕лр╕▒р╕зр╕Бр╕░р╣Вр╕лр╕ер╕Б
  const std::string VICTORY = "ЁЯПЖ";   // р╣Др╕нр╕Др╕нр╕Щр╕Кр╕▒р╕вр╕Кр╕Щр╕░
  const std::string PLAYER = "ЁЯСд";    // р╣Др╕нр╕Др╕нр╕Щр╕Ьр╕╣р╣Йр╣Ар╕ер╣Ир╕Щ
  const std::string TURN = "ЁЯФД";      // р╣Др╕нр╕Др╕нр╕Щр╕Бр╕▓р╕гр╣Ар╕Ыр╕ер╕╡р╣Ир╕вр╕Щр╣Ар╕Чр╕┤р╕гр╣Мр╕Щ
  const std::string PHASE = "тП░";     // р╣Др╕нр╕Др╕нр╕Щр╣Ар╕Яр╕к
  const std::string MENU = "ЁЯУЛ";      // р╣Др╕нр╕Др╕нр╕Щр╣Ар╕бр╕Щр╕╣
  const std::string HELP = "ЁЯТб";      // р╣Др╕нр╕Др╕нр╕Щр╕Кр╣Ир╕зр╕вр╣Ар╕лр╕ер╕╖р╕н
  const std::string EXIT = "ЁЯЪк";      // р╣Др╕нр╕Др╕нр╕Щр╕нр╕нр╕Бр╕Ир╕▓р╕Бр╣Ар╕Бр╕б
  const std::string NEXT = "тЦ╢я╕П";       // р╣Др╕нр╕Др╕нр╕Щр╕Цр╕▒р╕Фр╣Др╕Ы
  const std::string BACK = "тЧАя╕П";       // р╣Др╕нр╕Др╕нр╕Щр╕вр╣Йр╕нр╕Щр╕Бр╕ер╕▒р╕Ъ
  const std::string UP = "тмЖя╕П";         // р╣Др╕нр╕Др╕нр╕Щр╕Вр╕╢р╣Йр╕Щ
  const std::string DOWN = "тмЗя╕П";       // р╣Др╕нр╕Др╕нр╕Щр╕ер╕З
  const std::string CONFIRM = "тЬЕ";   // р╣Др╕нр╕Др╕нр╕Щр╕вр╕╖р╕Щр╕вр╕▒р╕Щ
  const std::string CANCEL = "тЭМ";    // р╣Др╕нр╕Др╕нр╕Щр╕вр╕Бр╣Ар╕ер╕┤р╕Б
  const std::string WARNING = "тЪая╕П";    // р╣Др╕нр╕Др╕нр╕Щр╕Др╕│р╣Ар╕Хр╕╖р╕нр╕Щ
  const std::string INFO = "тД╣я╕П";       // р╣Др╕нр╕Др╕нр╕Щр╕Вр╣Йр╕нр╕бр╕╣р╕е
  const std::string DECK = "ЁЯУЪ";      // р╣Др╕нр╕Др╕нр╕Щр╕кр╕│р╕гр╕▒р╕Ър╕Бр╕▓р╕гр╣Мр╕Ф
  const std::string HAND = "ЁЯд▓";      // р╣Др╕нр╕Др╕нр╕Щр╕бр╕╖р╕н
  const std::string FIELD = "ЁЯПЯя╕П";     // р╣Др╕нр╕Др╕нр╕Щр╕кр╕Щр╕▓р╕б
  const std::string SOUL = "ЁЯС╗";      // р╣Др╕нр╕Др╕нр╕Щр╕зр╕┤р╕Нр╕Нр╕▓р╕У
  const std::string DROP = "ЁЯЧСя╕П";      // р╣Др╕нр╕Др╕нр╕Щр╕Бр╕▓р╕гр╣Мр╕Фр╕Чр╕╡р╣Ир╕Цр╕╣р╕Бр╕Чр╕┤р╣Йр╕З
  const std::string GUARD = "ЁЯЫбя╕П";      // р╣Др╕нр╕Др╕нр╕Щр╕Бр╕▓р╕гр╣Мр╕Фр╕Ыр╣Йр╕нр╕Зр╕Бр╕▒р╕Щ
}

// р╣Др╕нр╕Др╕нр╕Щр╣Бр╕кр╕Фр╕Зр╣Ар╕Бр╕гр╕Фр╕Вр╕нр╕Зр╕Бр╕▓р╕гр╣Мр╕Ф
namespace GradeIcons
{
  const std::string G0 = "тЪк"; // р╣Ар╕Бр╕гр╕Ф 0 (р╕кр╕╡р╕Вр╕▓р╕з)
  const std::string G1 = "ЁЯФ╡"; // р╣Ар╕Бр╕гр╕Ф 1 (р╕кр╕╡р╕Щр╣Йр╕│р╣Ар╕Зр╕┤р╕Щ)
  const std::string G2 = "ЁЯЯб"; // р╣Ар╕Бр╕гр╕Ф 2 (р╕кр╕╡р╣Ар╕лр╕ер╕╖р╕нр╕З)
  const std::string G3 = "ЁЯЯа"; // р╣Ар╕Бр╕гр╕Ф 3 (р╕кр╕╡р╕кр╣Йр╕б)
  const std::string G4 = "ЁЯФ┤"; // р╣Ар╕Бр╕гр╕Ф 4 (р╕кр╕╡р╣Бр╕Фр╕З)
}

class UIHelper
{
public:
  // р╕Бр╕▓р╕гр╕Ир╕▒р╕Фр╕Бр╕▓р╕гр╕лр╕Щр╣Йр╕▓р╕Ир╕н
  static void ClearScreen();                                                            // р╕ер╣Йр╕▓р╕Зр╕лр╕Щр╣Йр╕▓р╕Ир╕н
  static void PauseForUser(const std::string &message = "р╕Бр╕Ф Enter р╣Ар╕Юр╕╖р╣Ир╕нр╕Фр╕│р╣Ар╕Щр╕┤р╕Щр╕Бр╕▓р╕гр╕Хр╣Ир╕н...");   // р╕лр╕вр╕╕р╕Фр╕гр╕нр╕Ьр╕╣р╣Йр╣Гр╕Кр╣Й
  static void ShowLoadingAnimation(const std::string &message, int duration_ms = 1500); // р╣Бр╕кр╕Фр╕Зр╣Бр╕нр╕Щр╕┤р╣Ар╕бр╕Кр╕▒р╕Щр╣Вр╕лр╕ер╕Ф

  // р╕Бр╕▓р╕гр╕зр╕▓р╕Фр╕Бр╕ер╣Ир╕нр╕З
  static void PrintHorizontalLine(char c = '=', int length = 70, const std::string &color = Colors::CYAN);    // р╕зр╕▓р╕Фр╣Ар╕кр╣Йр╕Щр╣Бр╕Щр╕зр╕Щр╕нр╕Щ
  static void PrintHorizontalLine(const std::string &s, int length, const std::string &color = Colors::CYAN); // р╕зр╕▓р╕Фр╣Ар╕кр╣Йр╕Щр╣Бр╕Щр╕зр╕Щр╕нр╕Щр╕Фр╣Йр╕зр╕вр╕Вр╣Йр╕нр╕Др╕зр╕▓р╕б
  static void PrintBox(const std::string &content, const std::string &title = "",
                       const std::string &border_color = Colors::CYAN,
                       const std::string &text_color = Colors::WHITE); // р╕зр╕▓р╕Фр╕Бр╕ер╣Ир╕нр╕Зр╕Вр╣Йр╕нр╕Др╕зр╕▓р╕б
  static void PrintSectionHeader(const std::string &title, const std::string &icon = Icons::STAR,
                                 const std::string &color = Colors::BRIGHT_YELLOW); // р╣Бр╕кр╕Фр╕Зр╕лр╕▒р╕зр╕Вр╣Йр╕нр╕кр╣Ир╕зр╕Щ
  static void PrintPhaseHeader(const std::string &phase_name, const std::string &player_name,
                               int turn_number = 0, const std::string &color = Colors::BRIGHT_CYAN); // р╣Бр╕кр╕Фр╕Зр╕лр╕▒р╕зр╕Вр╣Йр╕нр╣Ар╕Яр╕к

  // р╕Ыр╕гр╕░р╣Ар╕ар╕Чр╕Вр╣Йр╕нр╕Др╕зр╕▓р╕б
  static void PrintSuccess(const std::string &message); // р╣Бр╕кр╕Фр╕Зр╕Вр╣Йр╕нр╕Др╕зр╕▓р╕бр╕кр╕│р╣Ар╕гр╣Зр╕И
  static void PrintError(const std::string &message);   // р╣Бр╕кр╕Фр╕Зр╕Вр╣Йр╕нр╕Др╕зр╕▓р╕бр╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Ф
  static void PrintWarning(const std::string &message); // р╣Бр╕кр╕Фр╕Зр╕Вр╣Йр╕нр╕Др╕зр╕▓р╕бр╣Ар╕Хр╕╖р╕нр╕Щ
  static void PrintInfo(const std::string &message);    // р╣Бр╕кр╕Фр╕Зр╕Вр╣Йр╕нр╕Др╕зр╕▓р╕бр╕Вр╣Йр╕нр╕бр╕╣р╕е

  // р╕кр╕Цр╕▓р╕Щр╕░р╣Ар╕Бр╕б
  static void PrintGameTitle(); // р╣Бр╕кр╕Фр╕Зр╕Кр╕╖р╣Ир╕нр╣Ар╕Бр╕б
  static void PrintQuickStatus(const std::string &player_name, int hand_size, int deck_size,
                               int damage_count, int soul_count, int drop_count); // р╣Бр╕кр╕Фр╕Зр╕кр╕Цр╕▓р╕Щр╕░р╣Ар╕Бр╕бр╣Бр╕Ър╕Ър╕вр╣Ир╕н
  static void PrintShortcuts();                                                   // р╣Бр╕кр╕Фр╕Зр╕Чр╕▓р╕Зр╕ер╕▒р╕Ф

  // р╕Др╕зр╕▓р╕бр╕Др╕╖р╕Ър╕лр╕Щр╣Йр╕▓/р╣Бр╕нр╕Щр╕┤р╣Ар╕бр╕Кр╕▒р╕Щ
  static void PrintProgressBar(int current, int max, const std::string &label = ""); // р╣Бр╕кр╕Фр╕Зр╣Бр╕Цр╕Ър╕Др╕зр╕▓р╕бр╕Др╕╖р╕Ър╕лр╕Щр╣Йр╕▓
  static void AnimateText(const std::string &text, int delay_ms = 50);               // р╣Бр╕кр╕Фр╕Зр╕Вр╣Йр╕нр╕Др╕зр╕▓р╕бр╣Бр╕Ър╕Ър╣Бр╕нр╕Щр╕┤р╣Ар╕бр╕Кр╕▒р╕Щ
  static void ShowDriveCheckAnimation();                                             // р╣Бр╕кр╕Фр╕Зр╣Бр╕нр╕Щр╕┤р╣Ар╕бр╕Кр╕▒р╕Щр╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕Бр╕▓р╕гр╣Мр╕Ф
  static void ShowDamageAnimation();                                                 // р╣Бр╕кр╕Фр╕Зр╣Бр╕нр╕Щр╕┤р╣Ар╕бр╕Кр╕▒р╕Щр╕Др╕зр╕▓р╕бр╣Ар╕кр╕╡р╕вр╕лр╕▓р╕в
  static void ShowPhaseTransition(const std::string &from, const std::string &to);   // р╣Бр╕кр╕Фр╕Зр╕Бр╕▓р╕гр╣Ар╕Ыр╕ер╕╡р╣Ир╕вр╕Щр╣Ар╕Яр╕к

  // р╕Хр╕▒р╕зр╕Кр╣Ир╕зр╕вр╕кр╕│р╕лр╕гр╕▒р╕Ър╕Бр╕▓р╕гр╕Ыр╣Йр╕нр╕Щр╕Вр╣Йр╕нр╕бр╕╣р╕е
  static std::string ColorText(const std::string &text, const std::string &color); // р╣Ар╕Ыр╕ер╕╡р╣Ир╕вр╕Щр╕кр╕╡р╕Вр╣Йр╕нр╕Др╕зр╕▓р╕б
  static std::string FormatCard(const std::string &name, int grade, bool is_standing = true,
                                bool show_icons = true); // р╕Ир╕▒р╕Фр╕гр╕╣р╕Ыр╣Бр╕Ър╕Ър╕Бр╕▓р╕гр╣Мр╕Ф
  static std::string GetGradeIcon(int grade);            // р╕гр╕▒р╕Ър╣Др╕нр╕Др╕нр╕Щр╣Ар╕Бр╕гр╕Ф
  static std::string GetStatusIcon(bool is_standing);    // р╕гр╕▒р╕Ър╣Др╕нр╕Др╕нр╕Щр╕кр╕Цр╕▓р╕Щр╕░

  // р╕Хр╕▒р╕зр╕Кр╣Ир╕зр╕вр╣Бр╕кр╕Фр╕Зр╕Бр╕▓р╕гр╣Мр╕Ф
  static std::string FormatPowerShield(int power, int shield);                                     // р╕Ир╕▒р╕Фр╕гр╕╣р╕Ыр╣Бр╕Ър╕Ър╕Юр╕ер╕▒р╕Зр╣Бр╕ер╕░р╣Вр╕ер╣И
  static std::string FormatCardShort(const std::string &code, const std::string &name, int grade); // р╕Ир╕▒р╕Фр╕гр╕╣р╕Ыр╣Бр╕Ър╕Ър╕Бр╕▓р╕гр╣Мр╕Фр╣Бр╕Ър╕Ър╕вр╣Ир╕н

  // р╕Хр╕▒р╕зр╕Кр╣Ир╕зр╕вр╕Бр╕▓р╕гр╕Ир╕▒р╕Фр╕зр╕▓р╕З
  static void PrintCardPreview(const std::string &name, int grade, int power, int shield,
                               int critical, const std::string &skill, const std::string &type); // р╣Бр╕кр╕Фр╕Зр╕Хр╕▒р╕зр╕нр╕вр╣Ир╕▓р╕Зр╕Бр╕▓р╕гр╣Мр╕Ф
  static void PrintBattleStats(const std::string &attacker_name, int attack_power, int critical,
                               const std::string &defender_name, int defense_power); // р╣Бр╕кр╕Фр╕Зр╕кр╕Цр╕┤р╕Хр╕┤р╕Бр╕▓р╕гр╕Хр╣Ир╕нр╕кр╕╣р╣Й

  static int GetDisplayWidth(const std::string &str); // р╕гр╕▒р╕Ър╕Др╕зр╕▓р╕бр╕Бр╕зр╣Йр╕▓р╕Зр╕Вр╕нр╕Зр╕Бр╕▓р╕гр╣Бр╕кр╕Фр╕Зр╕Ьр╕е

private:
  static std::string RepeatChar(char c, int n);               // р╕Чр╕│р╕Лр╣Йр╕│р╕Хр╕▒р╕зр╕нр╕▒р╕Бр╕йр╕г
  static std::string RepeatChar(wchar_t wc, int n);           // р╕Чр╕│р╕Лр╣Йр╕│р╕Хр╕▒р╕зр╕нр╕▒р╕Бр╕йр╕гр╣Бр╕Ър╕Ъ wide
  static std::string RepeatChar(const std::string &s, int n); // р╕Чр╕│р╕Лр╣Йр╕│р╕Вр╣Йр╕нр╕Др╕зр╕▓р╕б
};

#endif // UIHELPER_H